{"version":3,"sources":["Components/Header.js","utils/API.js","Components/Search.js","Components/Nav.js","Components/Body.js","App.js","reportWebVitals.js","index.js"],"names":["Header","Component","axios","get","Search","newSearch","className","type","placeholder","aria-label","onChange","e","Nav","id","Body","state","users","filteredUsers","sortOrder","headings","name","width","newSort","event","order","setState","sortedPhone","sort","a","b","undefined","first","localeCompare","console","log","target","value","filter","filteredList","item","Object","values","join","toLowerCase","indexOf","API","then","results","data","this","map","style","onClick","login","phone","picture","email","nat","data-th","last","href","uuid","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b8ec5dce.chunk.js","sourcesContent":["import React, { Component } from \"react\"\r\nclass Header extends Component {\r\n    render() {\r\n        return (\r\n            <h1>Employee Directory</h1>\r\n\r\n        )\r\n    }\r\n}\r\nexport default Header","import axios from \"axios\";\r\nconst BASEURL = \"https://randomuser.me/api/?results=100\";\r\n\r\nexport default {\r\n    searchUsers: function () {\r\n        return axios.get(BASEURL);\r\n    }\r\n};\r\n","import React from \"react\";\r\n\r\n\r\nfunction Search({ newSearch }) {\r\n    return (\r\n        <div className=\"search\">\r\n            <form className=\"form-inline\">\r\n                <input\r\n                    className=\"form-control\"\r\n                    type=\"search\"\r\n                    placeholder=\"Search\"\r\n                    aria-label=\"Search\"\r\n                    onChange={e => newSearch(e)}\r\n                />\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\nexport default Search;\r\n","import React from \"react\";\r\nimport Search from \"./Search.js\";\r\nimport \"../Styles/nav.css\";\r\n\r\nfunction Nav({ newSearch }) {\r\n    return (\r\n        <nav className=\"navbar navbar-expand navbar-light bg-light\">\r\n            <div className=\"navbar-collapse row\" id=\"navbarNav\">\r\n                <Search newSearch={newSearch} />\r\n            </div>\r\n        </nav>\r\n    );\r\n}\r\nexport default Nav;\r\n","import React, { Component } from \"react\"\r\nimport API from \"../utils/API\";\r\nimport Nav from \"../Components/Nav\"\r\nimport \"../Styles/body.css\";\r\nclass Body extends Component {\r\n    state = {\r\n        users: [{}],\r\n        filteredUsers: [{}],\r\n        sortOrder: \"ascend\"\r\n    }\r\n    headings = [\r\n        { name: \"name\", width: \"25%\" },\r\n        { name: \"phone\", width: \"25%\" },\r\n        { name: \"email\", width: \"25%\" },\r\n        { name: \"nat\", width: \"25%\" }\r\n    ]\r\n    newSort = event => {\r\n        if (this.state.order === \"ascend\") {\r\n            this.setState({\r\n                order: \"descend\"\r\n            })\r\n        }\r\n        else {\r\n            this.setState({\r\n                order: \"ascend\"\r\n            })\r\n        }\r\n        // sort logic goes here\r\n        const compareFunction = (a, b) => {\r\n            if (this.state.order === \"ascend\") {\r\n                if (a[event] === undefined) {\r\n                    return 1;\r\n                } else if (b[event] === undefined) {\r\n                    return -1;\r\n                }\r\n                else if (event === \"name\") {\r\n                    return a[event].first.localeCompare(b[event].first);\r\n                }\r\n                else if (event === \"phone\") {\r\n                    return a[event].localeCompare(b[event]);\r\n                }\r\n                else if (event === \"email\") {\r\n                    return a[event].localeCompare(b[event]);\r\n                }\r\n                else if (event === \"nat\") {\r\n                    return a[event].localeCompare(b[event]);\r\n                }\r\n                else {\r\n                    return a[event] - b[event];\r\n                }\r\n            } else {\r\n                if (a[event] === undefined) {\r\n                    return 1;\r\n                } else if (b[event] === undefined) {\r\n                    return -1;\r\n                }\r\n                else if (event === \"name\") {\r\n                    return b[event].first.localeCompare(a[event].first);\r\n                }\r\n                else if (event === \"phone\") {\r\n                    return b[event].localeCompare(a[event]);\r\n                }\r\n                else if (event === \"email\") {\r\n                    return b[event].localeCompare(a[event]);\r\n                }\r\n                else if (event === \"nat\") {\r\n                    return b[event].localeCompare(a[event]);\r\n                }\r\n\r\n                else {\r\n                    return b[event] - a[event];\r\n                }\r\n            }\r\n\r\n        }\r\n        const sortedPhone = this.state.filteredUsers.sort(compareFunction)\r\n        this.setState({ filteredUsers: sortedPhone })\r\n    }\r\n    newSearch = event => {\r\n        console.log(event.target.value);\r\n        const filter = event.target.value;\r\n        const filteredList = this.state.users.filter(item => {\r\n            let values = Object.values(item)\r\n                .join(\"\")\r\n                .toLowerCase();\r\n            return values.indexOf(filter.toLowerCase()) !== -1;\r\n        });\r\n        this.setState({ filteredUsers: filteredList });\r\n    }\r\n    componentDidMount() {\r\n        API.searchUsers().then(results => {\r\n\r\n            this.setState({\r\n                users: results.data.results,\r\n                filteredUsers: results.data.results\r\n            });\r\n        });\r\n    }\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                <Nav newSearch={this.newSearch} />\r\n                <div className=\"datatable mt-5\">\r\n                    <table id=\"table\"\r\n                        className=\"table table-striped table-bordered table-sm\"\r\n                    >\r\n                        <thead>\r\n                            <tr>\r\n                                {this.headings.map(({ name, width }) => {\r\n                                    return (\r\n                                        <th\r\n                                            className=\"col\"\r\n                                            key={name}\r\n                                            style={{ width }}\r\n                                            onClick={() => {\r\n                                                this.newSort(name)\r\n                                            }}\r\n                                        >\r\n                                            {name}\r\n                                            <span className=\"pointer\"></span>\r\n                                        </th>\r\n                                    )\r\n                                })}\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {this.state.filteredUsers[0] !== undefined && this.state.filteredUsers[0].name !== undefined ? (\r\n                                this.state.filteredUsers.map(({ login, name, picture, phone, email, nat }) => {\r\n                                    return (\r\n                                        <tr key={login.uuid}>\r\n                                            <td data-th=\"Name\" className=\"name-cell align-middle\">\r\n                                                {name.first} {name.last}\r\n                                            </td>\r\n                                            <td data-th=\"Phone\" className=\"align-middle\">\r\n                                                {phone}\r\n                                            </td>\r\n                                            <td data-th=\"Email\" className=\"align-middle\">\r\n                                                <a href={\"mailto:\" + email} target=\"__blank\">\r\n                                                    {email}\r\n                                                </a>\r\n                                            </td>\r\n                                            <td data-th=\"Nat\" className=\"align-middle\">\r\n                                                {nat}\r\n                                            </td>\r\n                                        </tr>\r\n                                    );\r\n                                })\r\n                            ) : (\r\n                                    <></>\r\n                                )}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Body","import React from \"react\";\nimport './App.css';\nimport Header from './Components/Header'\nimport Body from './Components/Body'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <Body />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}